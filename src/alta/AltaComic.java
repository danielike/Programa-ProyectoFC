/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package alta;

import baja.BajaColeccion;
import baja.BajaComic;
import clases.Coleccion;
import clases.Conexion;
import clases.DocumentoLongitudRestringida;
import clases.FtpClient;
import java.awt.Dimension;
import java.sql.PreparedStatement;
import java.awt.Font;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;
import java.sql.Date;
import javax.imageio.ImageIO;
import javax.swing.JInternalFrame;
import javax.swing.event.InternalFrameEvent;
import javax.swing.event.InternalFrameListener;
import modificacion.ModificacionColeccion;
import modificacion.ModificacionComic;
import ventanaInformes.InformesColecciones;
import ventanaInformes.InformesComics;

/**
 *
 * @author Dani
 */
public class AltaComic extends javax.swing.JInternalFrame implements 
        InternalFrameListener{
    private File file;
    private Image imagenABD;
    public final static String RUTA_IMG = "http://danielike-001-site1.itempurl.com//android_connect//img//";
    public final static String RUTA_PRUEBA = "C:\\wamp64\\www\\android_connect\\img\\";
    private FtpClient cliente;
    /**
     * Creates new form AltaComic
     */
    public AltaComic() {
        setSize(720, 720);
        initComponents();
        txtTitulo.setDocument(new DocumentoLongitudRestringida(50));
        cmbColecciones.setModel(modeloColecciones);
        rellenarColecciones();
        cliente = new FtpClient();
        try {
            cliente.open();
        } catch (IOException ex) {
            Logger.getLogger(AltaComic.class.getName()).log(Level.SEVERE, null, ex);
        }
        addInternalFrameListener(this);
    }
/**
     * resetea el combobox a su posicion original
     */
    private void reset(){
        if(cmbColecciones.getSelectedIndex() != -1){
            cmbColecciones.setSelectedIndex(0);
        }
        txtTitulo.setText("");
        jdatechooser.setCalendar(null);
        spnNumColeccion.setValue(1);
        spnPrecio.setValue(0);
        cmbEstado.setSelectedItem("BUENO");
    }
    /**
     * limpia los campos del formulario
     */
    private void limpiar(){
        
    }
    /**
     * rellena el combobox de colecciones
     */
    public static void rellenarColecciones(){
        modeloColecciones.removeAllElements();
        try {
            Statement stm = Conexion.getConexion().createStatement();
            ResultSet rs = stm.executeQuery("select id, nombre from "
                    + "colecciones order by nombre");
            while(rs.next()){
                Coleccion coleccion = new Coleccion(rs.getInt(1), rs.getString(2));
                modeloColecciones.addElement(coleccion);
            }
        } catch (SQLException e) {
            System.out.println(""+e.getErrorCode());
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jLabel1 = new javax.swing.JLabel();
        txtTitulo = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jdatechooser = new com.toedter.calendar.JDateChooser();
        jLabel3 = new javax.swing.JLabel();
        spnNumColeccion = new javax.swing.JSpinner();
        jLabel4 = new javax.swing.JLabel();
        spnPrecio = new javax.swing.JSpinner();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        btnArchivo = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        cmbEstado = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        cmbColecciones = new javax.swing.JComboBox<>();
        btnAceptar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        txtImagen = new javax.swing.JTextField();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Alta Comic");
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jLabel1.setText("Título");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        getContentPane().add(jLabel1, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        getContentPane().add(txtTitulo, gridBagConstraints);

        jLabel2.setText("Fecha de adquisición");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        getContentPane().add(jLabel2, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        getContentPane().add(jdatechooser, gridBagConstraints);

        jLabel3.setText("Número de colección");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        getContentPane().add(jLabel3, gridBagConstraints);

        spnNumColeccion.setModel(new javax.swing.SpinnerNumberModel(1, 1, 9999, 1));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        getContentPane().add(spnNumColeccion, gridBagConstraints);

        jLabel4.setText("Precio");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        getContentPane().add(jLabel4, gridBagConstraints);

        spnPrecio.setModel(new javax.swing.SpinnerNumberModel(Float.valueOf(0.0f), Float.valueOf(0.0f), Float.valueOf(9999.99f), Float.valueOf(0.1f)));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        getContentPane().add(spnPrecio, gridBagConstraints);

        jLabel5.setText("€");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        getContentPane().add(jLabel5, gridBagConstraints);

        jLabel6.setText("Portada");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        getContentPane().add(jLabel6, gridBagConstraints);

        btnArchivo.setText("Seleccionar archivo");
        btnArchivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnArchivoActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        getContentPane().add(btnArchivo, gridBagConstraints);

        jLabel7.setText("Estado");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        getContentPane().add(jLabel7, gridBagConstraints);

        cmbEstado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "BUENO", "MALO", "REGULAR", "PERFECTO" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        getContentPane().add(cmbEstado, gridBagConstraints);

        jLabel8.setText("Colección");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        getContentPane().add(jLabel8, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        getContentPane().add(cmbColecciones, gridBagConstraints);

        btnAceptar.setText("Aceptar");
        btnAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAceptarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        getContentPane().add(btnAceptar, gridBagConstraints);

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        getContentPane().add(btnCancelar, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        getContentPane().add(txtImagen, gridBagConstraints);

        setBounds(0, 0, 653, 428);
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        dispose();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAceptarActionPerformed
        ///validación
        if(txtTitulo.getText().trim().isEmpty()){
            JOptionPane.showMessageDialog(this, "Falta título");
            return;
        }if(spnNumColeccion.getValue().toString().equalsIgnoreCase("0")){
            JOptionPane.showMessageDialog(this, "El número de colección "
                    + "no puede ser 0");
            return;
        }if(spnPrecio.getValue().toString().equalsIgnoreCase("0.0")){
            JOptionPane.showMessageDialog(this, "El precio no puede ser 0");
        }if(cmbColecciones.getSelectedIndex() == -1){
            JOptionPane.showConfirmDialog(this, "Selecciona una colección");
            return;
        }if(jdatechooser.getDate() == null){
            JOptionPane.showMessageDialog(this, "Falta fecha de adquisición");
            return;
        }
        FileInputStream fis = null;
        try {
            fis = new FileInputStream(file);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(AltaComic.class.getName()).log(Level.SEVERE, null, ex);
        }
        Coleccion coleccion = (Coleccion) cmbColecciones.getSelectedItem();
        // guarda un comic en bd
        try {
            PreparedStatement ps = null;
            String insert = "insert into comics values(id, ?, ?, ?, ?, ?, ?, ?, ?)";
            Conexion.getConexion().setAutoCommit(false);
            ps =  Conexion.getConexion().prepareStatement(insert);
            ps.setString(1, txtTitulo.getText().trim());
            ps.setDate(2, new Date(jdatechooser.getDate().getTime()));
            ps.setInt(3, (int) spnNumColeccion.getValue());
            ps.setFloat(4, (float) spnPrecio.getValue());
            ps.setBinaryStream(5, fis, file.length());
            ps.setString(6, (String) cmbEstado.getSelectedItem());
            ps.setInt(7, coleccion.getId());
            ps.setString(8, file.getName());
            ps.executeUpdate();
            Conexion.getConexion().commit();
            System.out.println(cliente.subirFichero(file.getAbsolutePath(), 
                    file.getName()));
        } catch (SQLException e) {
            System.out.println(""+e.getErrorCode());
            e.printStackTrace();
            return;
        }
        //limpiamos el formulario
        limpiar();
        //actualizamos el resto de formularios
        AltaComic.rellenarColecciones();
        BajaColeccion.rellenarColecciones();
        BajaComic.rellenarComics();
        ModificacionColeccion.rellenarColecciones();
        ModificacionComic.rellenarColecciones();
        ModificacionComic.rellenarComics();
        InformesComics.rellenarComics();
        InformesColecciones.rellenarColecciones();
        JOptionPane.showMessageDialog(this, "Comic insertado correctamente");
    }//GEN-LAST:event_btnAceptarActionPerformed

    
    private void btnArchivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnArchivoActionPerformed
        // abre filechooser
        JFileChooser filechooser = new JFileChooser();
        filechooser.setDialogType(JFileChooser.SAVE_DIALOG);
        filechooser.setDialogTitle("Guardar");
        FileFilter filtro = new FileNameExtensionFilter("imágenes (.jpeg, .jpg,"
                + " .png)", new String[]{"png","jpeg","jpg"});
        filechooser.setFileFilter(filtro);
        filechooser.setAcceptAllFileFilterUsed(false);
        filechooser.setFont(new Font("Lucida Handwriting", 0, 18));
        do{
            //se abre la ventana
            int seleccion = filechooser.showSaveDialog(this);
            //en funcion de la opcion seleccionada, se hace una cosa u otra
            switch(seleccion){
                case JFileChooser.APPROVE_OPTION:
                    //obtenemos la imagen y la almacenamos en un File
                    file = filechooser.getSelectedFile();
                    if(!file.exists()){
                        JOptionPane.showMessageDialog(this, "Selecciona una "
                                + "imagen válida");
                    }
                    System.out.println(""+file.getAbsolutePath());
                    break;
                case JFileChooser.CANCEL_OPTION:
                    //cancelar
                    filechooser.cancelSelection();
                    return;
                default:
                    //error
                    System.out.println("error");
                break;
            }
        }while(!file.exists());
        txtImagen.setText(file.getAbsolutePath());
        System.out.println(""+file.getName());
        try {
            imagenABD = ImageIO.read(file);
        } catch (IOException ex) {
            Logger.getLogger(AltaComic.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnArchivoActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAceptar;
    private javax.swing.JButton btnArchivo;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JComboBox<Coleccion> cmbColecciones;
    private javax.swing.JComboBox<String> cmbEstado;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private com.toedter.calendar.JDateChooser jdatechooser;
    private javax.swing.JSpinner spnNumColeccion;
    private javax.swing.JSpinner spnPrecio;
    private javax.swing.JTextField txtImagen;
    private javax.swing.JTextField txtTitulo;
    // End of variables declaration//GEN-END:variables
    private static DefaultComboBoxModel<Coleccion> modeloColecciones = new DefaultComboBoxModel<>();

    @Override
    public void internalFrameOpened(InternalFrameEvent e) {
       
    }

    @Override
    public void internalFrameClosing(InternalFrameEvent e) {
        try {
            //cerramos la sesion y la conexion al ftpserver
            cliente.close();
        } catch (IOException ex) {
            Logger.getLogger(AltaComic.class.getName()).log(Level.SEVERE, null, ex);
        }finally{
            dispose();
        }
    }

    @Override
    public void internalFrameClosed(InternalFrameEvent e) {
       
    }

    @Override
    public void internalFrameIconified(InternalFrameEvent e) {
       
    }

    @Override
    public void internalFrameDeiconified(InternalFrameEvent e) {
        
    }

    @Override
    public void internalFrameActivated(InternalFrameEvent e) {
        
    }

    @Override
    public void internalFrameDeactivated(InternalFrameEvent e) {
        
    }
}
